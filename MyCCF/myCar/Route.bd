classType myCar.Route
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_67, connection_71
		}
	}
	simpleIdentifier x at (241, 131) {
		label at (-40, -69)
		inPin inPin INDEX_SET_X inPin INDEX_GET_X connection_7 {
			bendpoints (130, 0)
		}
		outPin {
			connection_69
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier y at (241, 221) {
		label at (-40, -69)
		inPin inPin INDEX_SET_X inPin INDEX_GET_X connection_6 {
			bendpoints (130, 0)
		}
		outPin {
			connection_70
		}
		elementCall (myCar.Route.y) {
			returnPin at (right, 0) {
				connection_64
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.arg at (111, 275) {
		label at (0, -1)
		outPin {
			connection_65, connection_6
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.arg at (111, 185) {
		label at (0, -1)
		outPin {
			connection_7
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier focuspoint at (541, 151) {
		label at (0, 1)
		inPin inPin INDEX_SET_X inPin INDEX_GET_X outPin elementCall (myCar.Route.focuspoint) {
			argumentPin at (left, 0) connection_72
			sequenceCall at (-50, -28) {
				inPin connection_71
			}
		}
		sequenceCall {
			inPin
		}
	}
	intrinsic method length at (381, 271) {
		label at (10, 1)
		inPin connection_64 {
			bendpoints (50, 0), (50, 30)
		}
		outPin {
			connection_74
		}
	}
	equal at (601, 316) {
		inPin connection_77 {
			bendpoints (40, 0)
		}
		inPin connection_65 {
			bendpoints (130, 0), (130, 60)
		}
		outPin {
			connection_68
		}
	}
	simpleIdentifier lastElement at (691, 325) {
		label at (0, -1)
		inPin connection_68
		outPin sequenceCall {
			inPin connection_67
		}
	}
	complexIdentifier vectOps at (381, 171) size (7, 5) {
		label at (0, 1)
		methodCall vectorOperations.vectOps.getPoint {
			argumentPin x at (left, 0) connection_69 {
				bendpoints (50, 0), (50, 30)
			}
			argumentPin y at (left, 1) connection_70 {
				bendpoints (50, 0), (50, -50)
			}
			returnPin at (right, 0) {
				connection_72
			}
			sequenceCall {
				inPin
			}
		}
	}
	subtraction at (461, 286) {
		inPin connection_74 {
			bendpoints (40, 0)
		}
		inPin connection_79 {
			bendpoints (30, 0)
		}
		outPin {
			connection_76
		}
	}
	literal Numeric "1" at (311, 313) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_78
		}
	}
	typeConverter integer at (521, 291) {
		inPin connection_76
		outPin {
			connection_77
		}
	}
	typeConverter integer at (391, 311) {
		inPin connection_78
		outPin {
			connection_79
		}
	}
}