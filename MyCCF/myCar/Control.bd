classType myCar.Control
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_9, connection_11, connection_3, connection_107, connection_146, connection_102, connection_105, connection_43, connection_5, connection_90, connection_183, connection_92, connection_193
		}
	}
	complexIdentifier vectOps at (411, 301) size (13, 5) {
		label at (0, 1)
		methodCall vectorOperations.vectOps.length {
			argumentPin v_in at (left, 1) connection_49 {
				bendpoints (0, 70), (-70, 70)
			}
			returnPin at (right, 1) {
				connection_6
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Route at (131, 301) size (15, 7) {
		label at (0, 1)
		methodCall myCar.Route.calc {
			argumentPin arg at (left, 2) connection_4
			sequenceCall at (-50, -30) {
				inPin connection_3
			}
		}
		elementCall (myCar.Route.focuspoint) {
			returnPin at (right, 2) {
				connection_18
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
		elementCall (myCar.Route.distanceFocusEnd) {
			returnPin at (right, 4) {
				connection_86
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
		methodCall myCar.Route.point_distance {
			argumentPin point_in at (left, 0) connection_87 {
				bendpoints (40, 0), (40, 110), (-90, 110)
			}
			returnPin at (right, 0) {
				connection_195, connection_93
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	simpleIdentifier focuspointIndex at (61, 325) {
		label at (-50, 9)
		inPin outPin {
			connection_4
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier distance2focuspoint at (561, 315) {
		label at (0, -1)
		inPin connection_6
		outPin {
			connection_82
		}
		sequenceCall {
			inPin connection_5
		}
	}
	simpleIdentifier distance2focuspoint at (71, 445) {
		label at (0, -1)
		inPin outPin {
			connection_7
		}
		sequenceCall {
			inPin
		}
	}
	less at (231, 446) {
		inPin connection_7
		inPin connection_8 {
			bendpoints (100, 0)
		}
		outPin {
			connection_10
		}
	}
	simpleIdentifier proximity at (91, 485) {
		label at (0, -1)
		outPin {
			connection_8
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier trigger at (351, 441) size (3, 3) backgroundColor #ffffff {
		label at (0, 1)
		methodCall SystemLib.Miscellaneous.EdgeRising.compute {
			argumentPin signal at (left, 1) connection_10
			sequenceCall at (-40, -44) {
				inPin connection_9
			}
		}
		methodCall SystemLib.Miscellaneous.EdgeRising.value {
			returnPin at (right, 1) {
				connection_12
			}
			sequenceCall {
				inPin
			}
		}
	}
	if at (451, 451) {
		inPin connection_12
		ifControlFlowOutPin {
			connection_15
		}
		sequenceCall {
			inPin connection_11
		}
	}
	simpleIdentifier focuspointIndex at (581, 505) {
		label at (-50, 9)
		inPin connection_16
		outPin {
			connection_14
		}
		sequenceCall {
			inPin connection_15 {
				bendpoints (70, 0)
			}
		}
	}
	addition at (521, 496) {
		inPin connection_13
		inPin connection_14 {
			bendpoints (30, 0), (30, 30), (-110, 30)
		}
		outPin {
			connection_16
		}
	}
	literal Numeric "1" at (411, 493) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_13
		}
	}
	simpleIdentifier resources.CarMessages.mybearing at (581, 245) {
		label at (0, -1)
		outPin {
			connection_145
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier vectOps at (561, 161) size (12, 6) {
		label at (0, 1)
		methodCall vectorOperations.vectOps.angle {
			argumentPin vectA at (left, 1) connection_69
			argumentPin vectB at (left, 3) connection_68 {
				bendpoints (0, 30)
			}
			returnPin at (right, 2) {
				connection_144, connection_143
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier vectOps at (321, 151) size (14, 5) {
		label at (20, 1)
		methodCall vectorOperations.vectOps.getVect {
			argumentPin pointA at (left, 0) connection_21 {
				bendpoints (100, 0)
			}
			argumentPin pointB at (left, 2) connection_18 {
				bendpoints (10, 0), (10, -150)
			}
			returnPin at (right, 1) {
				connection_68, connection_49
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier vectOps at (61, 111) size (14, 4) {
		label at (0, 1)
		methodCall vectorOperations.vectOps.getPoint {
			argumentPin x at (left, 0) connection_19
			argumentPin y at (left, 1) connection_20
			returnPin at (right, 0) {
				connection_87, connection_21
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier resources.CarMessages.x at (11, 105) {
		label at (0, -1)
		outPin {
			connection_19
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.y at (11, 135) {
		label at (0, -1)
		outPin {
			connection_20
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier tmp at (491, 101) {
		label at (0, 1)
		inPin inPin INDEX_SET_X inPin INDEX_GET_X outPin elementCall (myCar.Control.tmp) {
			returnPin at (right, 0) {
				connection_69
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier Logger at (891, 91) size (11, 12) {
		label at (0, 1)
		methodCall myCar.Logger.calc {
			argumentPin t at (left, 0) connection_95 {
				bendpoints (10, 0), (10, 40), (-40, 40)
			}
			argumentPin x at (left, 2) connection_96 {
				bendpoints (0, 10), (40, 10)
			}
			argumentPin y at (left, 4) connection_97 {
				bendpoints (40, 0)
			}
			argumentPin z at (left, 7) connection_143 {
				bendpoints (0, -20)
			}
			argumentPin o at (left, 9) connection_194 {
				bendpoints (50, 0)
			}
			sequenceCall at (-60, -30) {
				inPin connection_193
			}
		}
	}
	simpleIdentifier resources.CarMessages.x at (741, 95) {
		label at (0, -1)
		outPin {
			connection_40
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.y at (741, 125) {
		label at (0, -1)
		outPin {
			connection_41
		}
		sequenceCall {
			inPin
		}
	}
	unitConversion at (801, 91) {
		inPin connection_40
		outPin {
			connection_96
		}
		inputType units.si.m outputType real
	}
	unitConversion at (801, 121) {
		inPin connection_41
		outPin {
			connection_97
		}
		inputType units.si.m outputType real
	}
	simpleIdentifier str at (871, 25) {
		label at (0, -1)
		inPin outPin {
			connection_95, connection_44
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.steering at (951, 25) {
		label at (0, -1)
		inPin connection_44
		sequenceCall {
			inPin connection_43
		}
	}
	simpleIdentifier str at (1141, 265) {
		label at (0, -1)
		inPin connection_106
		outPin {
			connection_108
		}
		sequenceCall at (-10, -24) {
			inPin connection_105
		}
	}
	addition at (671, 346) {
		inPin connection_82 {
			bendpoints (60, 0)
		}
		inPin connection_86 {
			bendpoints (0, 20)
		}
		outPin {
			connection_184, connection_91
		}
	}
	simpleIdentifier resources.DriverMessages.dist2End at (791, 355) {
		label at (0, -1)
		inPin connection_91 {
			bendpoints (0, -2)
		}
		sequenceCall {
			inPin connection_90
		}
	}
	simpleIdentifier resources.DriverMessages.dist2Route at (321, 305) {
		label at (0, -1)
		inPin connection_93
		sequenceCall {
			inPin connection_92
		}
	}
	complexIdentifier SteeringCtrl at (961, 261) size (14, 8) {
		label at (0, 1)
		methodCall components.SteeringCtrl.calc {
			methodVoidPin at (top, 0) sequenceCall at (16, -20) {
				inPin connection_102
			}
		}
		elementCall (components.SteeringCtrl.str) {
			argumentPin at (left, 4) connection_108 {
				bendpoints (0, 120), (-260, 120), (-260, 40)
			}
			returnPin at (right, 0) {
				connection_106
			}
			sequenceCall at (-70, 6) {
				inPin connection_107
			}
		}
		elementCall (components.SteeringCtrl.delta) {
			argumentPin at (left, 1) connection_147
			sequenceCall at (-40, -34) {
				inPin connection_146
			}
		}
	}
	complexIdentifier vectOps at (741, 251) size (14, 6) {
		label at (0, 1)
		methodCall vectorOperations.vectOps.angleDiff {
			argumentPin alpha at (left, 1) connection_144 {
				bendpoints (0, -20), (30, -20), (30, 80)
			}
			argumentPin beta at (left, 3) connection_145 {
				bendpoints (70, 0), (70, 40)
			}
			returnPin at (right, 2) {
				connection_147
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	simpleIdentifier distance2end at (791, 415) {
		label at (0, -1)
		inPin connection_184 {
			bendpoints (40, 0), (40, 60)
		}
		outPin sequenceCall {
			inPin connection_183
		}
	}
	unitConversion at (791, 231) {
		inPin connection_195 {
			bendpoints (0, -70)
		}
		outPin {
			connection_194
		}
		inputType units.si.m outputType real
	}
}
blockdiagramSpecification LateralAcc {
	methodBody setTargetVel {
		outPin active {
			connection_163
		}
	}
	lessOrEqual at (471, 96) {
		inPin connection_192 {
			bendpoints (100, 0)
		}
		inPin connection_167
		outPin {
			connection_164
		}
	}
	literal unit units.common.kmph "0.0" at (631, 143) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_166
		}
	}
	literal unit units.si.m "35" at (401, 113) size (49, 0) {
		label at (30, -16)
		outPin {
			connection_167
		}
	}
	multiplication at (461, 236) {
		inPin connection_180 {
			bendpoints (40, 0)
		}
		inPin connection_181
		outPin {
			connection_168
		}
	}
	multiplication at (541, 256) {
		inPin connection_168 {
			bendpoints (40, 0)
		}
		inPin connection_170
		outPin {
			connection_169
		}
	}
	typeConverter real at (501, 301) {
		inPin connection_172
		outPin {
			connection_170
		}
	}
	multiplication at (771, 276) {
		inPin connection_174 {
			bendpoints (60, 0)
		}
		inPin connection_173 {
			bendpoints (100, 0)
		}
		outPin {
			connection_171
		}
	}
	unitConversion at (441, 301) {
		inPin connection_182
		outPin {
			connection_172
		}
		inputType units.si.m outputType real
	}
	literal unit units.common.kmph "3.6" at (621, 323) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_173
		}
	}
	complexIdentifier MathLib_instance at (621, 261) size (8, 3) {
		label at (0, 1)
		methodCall SystemLib.Math.MathLib.sqrt {
			argumentPin val at (left, 0) connection_169
			returnPin at (right, 0) {
				connection_174
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	literal unit units.common.kmph "60.0" at (771, 343) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_175
		}
	}
	minimum at (871, 306) {
		inPin connection_171 {
			bendpoints (10, 0), (10, 20)
		}
		inPin connection_175 {
			bendpoints (10, 0), (10, -20)
		}
		outPin {
			connection_177
		}
	}
	simpleIdentifier target_vel at (961, 305) {
		label at (0, -1)
		inPin connection_177 {
			bendpoints (50, 0)
		}
		outPin sequenceCall {
			inPin connection_179 {
				bendpoints (0, 70), (380, 70)
			}
		}
	}
	simpleIdentifier target_vel at (741, 145) {
		label at (0, -1)
		inPin connection_166
		outPin sequenceCall {
			inPin connection_178 {
				bendpoints (130, 0)
			}
		}
	}
	ifElse at (551, 101) {
		inPin connection_164
		ifControlFlowOutPin {
			connection_178
		}
		elseControlFlowOutPin {
			connection_179
		}
		sequenceCall {
			inPin connection_163
		}
	}
	literal Numeric "0.8" at (371, 223) size (49, 0) {
		label at (0, 4)
		outPin {
			connection_180
		}
	}
	simpleIdentifier g at (371, 255) {
		label at (0, -1)
		outPin {
			connection_181
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.radius at (341, 305) {
		label at (0, -1)
		outPin {
			connection_182
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier distance2end at (321, 75) {
		label at (0, -1)
		inPin outPin {
			connection_192
		}
		sequenceCall {
			inPin
		}
	}
}
blockdiagramSpecification VelocityCtrl {
	methodBody setPwrBrk {
		outPin active {
			connection_190, connection_186, connection_188
		}
	}
	simpleIdentifier resources.CarMessages.v at (231, 235) {
		label at (0, -1)
		outPin {
			connection_185
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier velocityController at (351, 181) size (14, 8) {
		label at (0, 1)
		methodCall components.VelocityCtrl.calc {
			argumentPin target_velocity at (left, 1) connection_191
			argumentPin current_velocity at (left, 5) connection_185
			sequenceCall at (-70, -30) {
				inPin connection_190
			}
		}
		elementCall (components.VelocityCtrl.power) {
			returnPin at (right, 1) {
				connection_187
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
		elementCall (components.VelocityCtrl.brake) {
			returnPin at (right, 5) {
				connection_189
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
	}
	simpleIdentifier target_vel at (231, 195) {
		label at (0, -1)
		inPin outPin {
			connection_191
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.brake at (561, 235) {
		label at (0, -1)
		inPin connection_189
		sequenceCall {
			inPin connection_188
		}
	}
	simpleIdentifier resources.CarMessages.power at (501, 195) {
		label at (0, -1)
		inPin connection_187
		sequenceCall {
			inPin connection_186
		}
	}
}